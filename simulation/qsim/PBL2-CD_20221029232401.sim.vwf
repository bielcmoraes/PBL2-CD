/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 20.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Colunas")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Colunas[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Colunas";
}

SIGNAL("Colunas[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Colunas";
}

SIGNAL("Display")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Display[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Display";
}

SIGNAL("Display[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Display";
}

SIGNAL("Display[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Display";
}

SIGNAL("Display[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Display";
}

SIGNAL("Display[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Display";
}

SIGNAL("Display[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Display";
}

SIGNAL("Display[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Display";
}

SIGNAL("Linhas")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Linhas[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Linhas";
}

SIGNAL("Linhas[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Linhas";
}

SIGNAL("Linhas[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Linhas";
}

SIGNAL("Linhas[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Linhas";
}

SIGNAL("Vagas")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Vagas[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Vagas";
}

SIGNAL("Vagas[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Vagas";
}

SIGNAL("Vagas[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Vagas";
}

SIGNAL("Vagas[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Vagas";
}

SIGNAL("Vagas[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Vagas";
}

SIGNAL("Vagas[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Vagas";
}

SIGNAL("Vagas[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Vagas";
}

SIGNAL("Vagas[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Vagas";
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 0.005;
		}
	}
}

TRANSITION_LIST("Colunas[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.951;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 526.316;
			LEVEL 1 FOR 526.315;
			LEVEL 0 FOR 521.37;
		}
	}
}

TRANSITION_LIST("Colunas[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.951;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 521.37;
		}
	}
}

TRANSITION_LIST("Display[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 18.864;
			LEVEL 0 FOR 519.337;
			LEVEL 1 FOR 1052.631;
			LEVEL 0 FOR 1052.631;
			LEVEL 1 FOR 1052.631;
			LEVEL 0 FOR 1052.631;
			LEVEL 1 FOR 1052.631;
			LEVEL 0 FOR 1052.631;
			LEVEL 1 FOR 1052.631;
			LEVEL 0 FOR 1052.631;
			LEVEL 1 FOR 1040.751;
		}
	}
}

TRANSITION_LIST("Display[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 16.952;
			LEVEL 1 FOR 9983.048;
		}
	}
}

TRANSITION_LIST("Display[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 17.221;
			LEVEL 0 FOR 516.215;
			LEVEL 1 FOR 3.732;
			LEVEL 0 FOR 523.297;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 3.018;
			LEVEL 1 FOR 523.484;
			LEVEL 0 FOR 525.415;
			LEVEL 1 FOR 3.732;
			LEVEL 0 FOR 523.297;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 3.018;
			LEVEL 1 FOR 523.484;
			LEVEL 0 FOR 525.415;
			LEVEL 1 FOR 3.732;
			LEVEL 0 FOR 523.297;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 3.018;
			LEVEL 1 FOR 523.484;
			LEVEL 0 FOR 525.415;
			LEVEL 1 FOR 3.732;
			LEVEL 0 FOR 523.297;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 3.018;
			LEVEL 1 FOR 523.484;
			LEVEL 0 FOR 525.415;
			LEVEL 1 FOR 3.732;
			LEVEL 0 FOR 523.297;
			LEVEL 1 FOR 518.487;
		}
	}
}

TRANSITION_LIST("Display[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 20.212;
			LEVEL 0 FOR 9979.788;
		}
	}
}

TRANSITION_LIST("Display[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 17.503;
			LEVEL 0 FOR 9982.497;
		}
	}
}

TRANSITION_LIST("Display[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 18.87;
			LEVEL 1 FOR 516.215;
			LEVEL 0 FOR 3.122;
			LEVEL 1 FOR 1052.631;
			LEVEL 0 FOR 523.924;
			LEVEL 1 FOR 525.585;
			LEVEL 0 FOR 3.122;
			LEVEL 1 FOR 1052.631;
			LEVEL 0 FOR 523.924;
			LEVEL 1 FOR 525.585;
			LEVEL 0 FOR 3.122;
			LEVEL 1 FOR 1052.631;
			LEVEL 0 FOR 523.924;
			LEVEL 1 FOR 525.585;
			LEVEL 0 FOR 3.122;
			LEVEL 1 FOR 1052.631;
			LEVEL 0 FOR 523.924;
			LEVEL 1 FOR 525.585;
			LEVEL 0 FOR 3.122;
			LEVEL 1 FOR 1040.745;
		}
	}
}

TRANSITION_LIST("Display[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 18.869;
			LEVEL 0 FOR 1042.537;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 1578.946;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 1578.946;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 1578.946;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 1578.946;
			LEVEL 1 FOR 517.546;
		}
	}
}

TRANSITION_LIST("Linhas[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.1;
			LEVEL 1 FOR 523.955;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 526.316;
			LEVEL 0 FOR 526.315;
			LEVEL 1 FOR 519.582;
		}
	}
}

TRANSITION_LIST("Linhas[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.169;
			LEVEL 1 FOR 9991.831;
		}
	}
}

TRANSITION_LIST("Linhas[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.713;
			LEVEL 1 FOR 9990.287;
		}
	}
}

TRANSITION_LIST("Linhas[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.657;
			LEVEL 0 FOR 9990.343;
		}
	}
}

TRANSITION_LIST("Vagas[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("Vagas[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("Vagas[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("Vagas[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("Vagas[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("Vagas[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("Vagas[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("Vagas[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10000.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Colunas";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3;
}

DISPLAY_LINE
{
	CHANNEL = "Colunas[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "Colunas[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "Display";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "Display[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Display[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Display[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Display[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Display[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Display[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Display[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Linhas";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "Linhas[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Linhas[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Linhas[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Linhas[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Vagas";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21, 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "Vagas[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "Vagas[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "Vagas[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "Vagas[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "Vagas[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "Vagas[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "Vagas[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "Vagas[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 17;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
